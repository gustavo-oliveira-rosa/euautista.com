# ---------------------------------------
# 0) Forçar HTTPS
# ---------------------------------------
RewriteEngine On
RewriteCond %{HTTPS} !=on
RewriteRule ^ https://%{HTTP_HOST}%{REQUEST_URI} [R=301,L]

# ---------------------------------------
# 1) Bloquear arquivos sensíveis
# ---------------------------------------
<FilesMatch "\.(htaccess|htpasswd|ini|log|sh|inc|bak|sql)$">
  Require all denied
</FilesMatch>

# Exceções úteis para .txt
<Files "robots.txt">
  Require all granted
</Files>
<Files "security.txt">
  Require all granted
</Files>

# ---------------------------------------
# 2) Impedir listagem de diretórios
# ---------------------------------------
Options -Indexes -Multiviews

# ---------------------------------------
# 3) MIME types importantes (PWA)
# ---------------------------------------
AddType application/manifest+json .webmanifest
AddType image/avif .avif
AddType image/webp .webp
AddType application/javascript .mjs

# ---------------------------------------
# 4) Segurança (headers)
# ---------------------------------------
<IfModule mod_headers.c>
  Header always set X-Content-Type-Options "nosniff"
  Header always set X-Frame-Options "SAMEORIGIN"
  Header always set Referrer-Policy "strict-origin-when-cross-origin"
  # HSTS (apenas se já estiver 100% em HTTPS):
  Header always set Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"
  # CSP básica (ajuste domínios/conteúdo inline conforme seu site)
  Header always set Content-Security-Policy "default-src 'self'; img-src 'self' data: https:; script-src 'self'; style-src 'self' 'unsafe-inline'; font-src 'self' data:; manifest-src 'self'; connect-src 'self'"
  # Permissions (desliga APIs que você não usa)
  Header always set Permissions-Policy "geolocation=(), microphone=(), camera=(), usb=(), payment=()"
</IfModule>

# ---------------------------------------
# 5) Compressão
# ---------------------------------------
<IfModule mod_deflate.c>
  AddOutputFilterByType DEFLATE text/html text/plain text/xml text/css text/javascript application/javascript application/json application/manifest+json
</IfModule>
<IfModule mod_brotli.c>
  BrotliCompressionQuality 5
  AddOutputFilterByType BROTLI_COMPRESS text/html text/plain text/xml text/css text/javascript application/javascript application/json application/manifest+json
</IfModule>

# ---------------------------------------
# 6) Cache-Control
#    - HTML: no-cache (para ver updates)
#    - Estáticos: cache longo com revalidação
# ---------------------------------------
<IfModule mod_expires.c>
  ExpiresActive On
  ExpiresByType text/html "access plus 0 seconds"
  ExpiresByType application/manifest+json "access plus 1 year"
  ExpiresByType application/javascript "access plus 1 year"
  ExpiresByType text/css "access plus 1 year"
  ExpiresByType image/png "access plus 1 year"
  ExpiresByType image/svg+xml "access plus 1 year"
  ExpiresByType image/webp "access plus 1 year"
  ExpiresByType image/avif "access plus 1 year"
</IfModule>

# HTML sem cache agressivo
<FilesMatch "\.(html)$">
  <IfModule mod_headers.c>
    Header always set Cache-Control "no-cache, no-store, must-revalidate"
    Header always set Pragma "no-cache"
    Header always set Expires "0"
  </IfModule>
</FilesMatch>

# Estáticos com cache longo
<FilesMatch "\.(js|mjs|css|png|jpg|jpeg|gif|svg|webp|avif|ico|woff2?)$">
  <IfModule mod_headers.c>
    Header always set Cache-Control "public, max-age=31536000, immutable"
  </IfModule>
</FilesMatch>

# ---------------------------------------
# 7) Service Worker (opcional)
#    Se o sw.js não estiver na raiz e você quiser escopo "/"
# ---------------------------------------
<Files "sw.js">
  <IfModule mod_headers.c>
    Header set Service-Worker-Allowed "/"
    Header set Cache-Control "no-cache"
  </IfModule>
</Files>

# ---------------------------------------
# 8) Bloquear bots ruins (ajuste com cuidado!)
#    Mantenha uma allowlist para não bloquear Google/Bing/etc.
# ---------------------------------------
# Allowlist (Google, Bing, etc.) - simplificado:
SetEnvIfNoCase User-Agent "Googlebot|Bingbot|DuckDuckBot|YandexBot|Baiduspider" good_bot
# Block alguns ruins comuns:
BrowserMatchNoCase "curl|nikto|sqlmap|libwww-perl" bad_bot
<RequireAll>
  Require all granted
  Require not env bad_bot
</RequireAll>

# ---------------------------------------
# 9) Bloquear acesso a pastas específicas
# ---------------------------------------
RewriteRule ^(\.git|node_modules|vendor)/ - [F,L]

# ---------------------------------------
# 10) SPA fallback (se você usa rotas no front-end)
# Descomente se necessário:
# RewriteCond %{REQUEST_FILENAME} !-f
# RewriteCond %{REQUEST_FILENAME} !-d
# RewriteRule . /index.html [L]

